scalar DateTime @scalar(class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\DateTime")

extend type Query {
    user(
      id: ID @eq @rules(apply: ["prohibits:email", "required_without:email"])

      email: String @eq @rules(apply: ["prohibits:id", "required_without:id", "email"])
    ): User @find

    users: [User!]! @all

    logout: message!

    me: User! @guard @auth
}

type Mutation{
    register(
        name: String!,
        email: String!,
        mobile: String!,
        password: String!,
    ) : String!

    login(email:String!, password:String!, device_name: String!): Token!

    forgotPassword(email:String!): Encrypt!

    resetPassword(encryption: String!, email: String!, password: String!): message!


}


type User {
    id: ID!
    name: String!
    email: String!
    mobile: String!
    email_verified_at: DateTime
    created_at: DateTime!
    updated_at: DateTime!
}

type Token{
    token: String!
    user: User!
}

type message{
    status: String!
    message: String
}

type Encrypt{
    encryption: String!
}